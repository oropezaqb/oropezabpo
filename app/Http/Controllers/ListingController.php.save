<?php

namespace App\Http\Controllers;

use App\Models\Listing;
use Illuminate\Http\Request;
use App\Http\Requests\StoreListing;
use Illuminate\Support\Facades\Validator;

class ListingController extends Controller
{

    public function __construct()
    {
        $this->middleware('auth');
        $this->middleware('web');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        if (empty(request('development')))
        {
            $listings = \DB::table('listings')->latest()->paginate(25);
        }
        else
        {
            $bills = \DB::table('listings')
                ->where('listings.development', 'like', '%' . request('development') . '%')
                ->latest()->paginate(25);
        }
        $header = "Listings";
        if (\Route::currentRouteName() === 'listings.index')
        {
            \Request::flash();
        }
        return view('listings.index', compact('listings', 'header'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $header = "Add a New Listing";
        $listings = Listing::latest()->get();
        return view('listings.create', compact('header', 'listings'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(StoreListing $request)
    {
        if($request->hasfile('photos'))
        {
            foreach($request->file('photos') as $image)
            {
                $name=$image->getClientOriginalName();
                $image->move(public_path().'/assets/images/listings', $name);  // your folder path
                $data[] = $name;
            }
        }
        try {
            \DB::transaction(function () use ($request) {
                $listing = new Listing([
                    'received_at' => request('received_at'),
                    'payee_id' => request('payee_id'),
                    'amount' => request('amount'),
                    'bill_number' => request('bill_number'),
                    'billed_at' => request('billed_at'),
                    'po_number' => request('po_number'),
                    'period_start' => request('period_start'),
                    'period_end' => request('period_end'),
                    'petty' => request('petty'),
                    'classification' => request('classification'),
                    'due_at' => request('due_at'),
                    'endorsed_at' => request('endorsed_at'),
                    'particulars' => request('particulars'),
                    'remarks' => request('remarks'),
                    'photos' => json_encode($data),
                    'user_id' => request('user_id'),
                ]);
                $listing->save();
            });
            return redirect(route('listings.index'))->with('success', 'Your listing has been recorded successfully');;
        } catch (\Exception $e) {
            return back()->with('status', $this->translateError($e))->withInput();
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Listing  $listing
     * @return \Illuminate\Http\Response
     */
    public function show(Listing $listing)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Listing  $listing
     * @return \Illuminate\Http\Response
     */
    public function edit(Listing $listing)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Listing  $listing
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Listing $listing)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Listing  $listing
     * @return \Illuminate\Http\Response
     */
    public function destroy(Listing $listing)
    {
        //
    }
}
